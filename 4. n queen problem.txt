#include<iostream>
#include<vector>
using namespace std;
int i;
int j;
bool isSafe(int row,int col,vector<vector<char>> &board ,int n)
{
     i=row;
     j=col;
    while(j>=0)
    {
        if(board[i][j]=='Q')
        {
            return false;
        }
        j--;
    }
    i=row;
     j=col;
    while(i>=0 && j>=0)
    {
        if(board[i][j]=='Q')
        {
            return false;
        }
        i--;
        j--;
    }
    i=row;
    j=col;
    while(i<n && j>=0){
        if(board[i][j]=='Q')
        {
            return false;

        }
        i++;
        j--;
    }
    return true;
}
void printSolution(vector<vector<char>> &board,int n)
{
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<board[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<"\n\n";

}
void solve(vector<vector<char>> &board,int col,int n)
{
    if(col>=n)
    {
        printSolution(board,n);
        return;
    }
    //ek case solve karado baki recurrsion sambhal lega
    for(int row=0;row<n;row++)
    { 
        if(isSafe(row,col,board,n))
        {
           board[row][col]='Q'; 
           solve(board,col+1,n);
           board[row][col]='-';
        }

    }
}
int main()
{
    int n=4;
    vector<vector<char>> board(n,vector<char>(n,'-'));
    int col=0;
    solve(board,col,n);
}